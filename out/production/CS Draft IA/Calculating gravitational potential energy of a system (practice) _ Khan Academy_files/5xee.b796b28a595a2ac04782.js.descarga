(window.webpackJsonp=window.webpackJsonp||[]).push([["5xee"],{"0bMH":function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.transformUserTask=void 0;t.transformUserTask=e=>{const t=e.task;return{cards:e.cards,includeSkipButton:e.includeSkipButton,taskJson:t,userExercises:e.userExercises}}},Borw:function(e,t,r){"use strict";var s=r("284h");Object.defineProperty(t,"__esModule",{value:!0}),t.parse=function(e){let t;if(t=e.match(c),t)return{type:"num_problems",numRequired:+t[1]};if(t=e.match(u),t)return{type:"num_correct_in_a_row",numRequired:+t[1]};if(t=e.match(d),t)return{type:"first_x_or_num_correct_in_a_row",numRequired:+t[2],first:+t[1]};if(t=e.match(m),t)return{type:"x_of_the_last_y",numRequired:+t[2],correct:+t[1]};throw new o.KAError("Error parsing completion criteria: ".concat(e),o.Errors.Internal)},t.isSatisfied=p,t.getNumRequiredForPromotion=f,t.isPromoted=function(e,t){if(!p(e,t))return!1;switch(e.type){case"num_problems":{const{promotionCriteria:r}=t.taskInfo;if("practice"===t.taskInfo.taskType){const e=t.taskInfo.exerciseDescriptors[t.taskProgress.exerciseDescriptorIndex],{currentFpmLevel:r}=t.taskProgress.progressByExercise[e],s=t.taskInfo.infoByExercise[e].initialFpmLevel;if(r&&s)return(0,i.getLevelIndex)(r)>(0,i.getLevelIndex)(s)}if(r&&"percent_correct"===r.name){const s=t.taskProgress.attemptHistory.filter((e=>e.correct)).length,n=f(e.numRequired,r.value/100);return s>=n}return p(e,t)}case"num_correct_in_a_row":case"first_x_or_num_correct_in_a_row":case"x_of_the_last_y":return!0;default:throw new o.KAError("Error checking if promotion is satisfied; "+"unknown type ".concat(e.type),o.Errors.Internal)}},t.format=function(e,t){switch(e.type){case"num_problems":{const r=e.numRequired-t.length;return 0===t.length?n.ngettext("Do %(num)s problem","Do %(num)s problems",e.numRequired):r<=0?n._("All done!"):n.ngettext("Do %(num)s more problem","Do %(num)s more problems",r)}case"num_correct_in_a_row":return n.ngettext("Get %(num)s questions correct in a row","Get %(num)s questions correct in a row",e.numRequired);case"first_x_or_num_correct_in_a_row":{const r=e.first>=e.numRequired,s=a(t)<t.length;if(r||s)return n.ngettext("Get %(num)s questions correct in a row","Get %(num)s questions correct in a row",e.numRequired);const o=e.first-t.length;return o>0?t.length>0?n.ngettext("See if you can get the next question, as well!","See if you can get the next %(num)s questions!",o):n.ngettext("See if you can get the first question!","See if you can get the next %(num)s questions!",o):l}case"x_of_the_last_y":return n._("Get %(x)s out of %(y)s correct",{x:e.correct,y:e.numRequired});default:throw new o.KAError("Error formatting criterion; unknown type ".concat(e.type),o.Errors.Internal)}};var n=s(r("HEOz")),o=r("4PhQ"),i=r("nA/X");function a(e){let t=0;for(let r=e.length-1;r>=0&&e[r].correct;r--)t+=1;return t}const l=n._("Awesome!"),c=/^num_problems_(\d+)$/,u=/^num_correct_in_a_row_(\d+)$/,d=/^first_x_or_num_correct_in_a_row_(\d+)_(\d+)$/,m=/^x_of_the_last_y:(\d+):(\d+)$/;function p(e,t){switch(e.type){case"num_problems":return t.taskProgress.attemptHistory.length>=e.numRequired;case"num_correct_in_a_row":return a(t.taskProgress.attemptHistory)>=e.numRequired;case"first_x_or_num_correct_in_a_row":return function(e){let t=0;for(let r=0;r<e.length&&e[r].correct;r++)t+=1;return t}(t.taskProgress.attemptHistory)>=e.first||a(t.taskProgress.attemptHistory)>=e.numRequired;case"x_of_the_last_y":return t.taskProgress.attemptHistory.slice(-e.numRequired).filter((e=>e.correct)).length>=e.correct;default:throw new o.KAError("Error checking if criterion is satisfied; "+"unknown type ".concat(e.type),o.Errors.Internal)}}function f(e,t,r){return t||(t=r?.5:.7),Math.ceil(e*t)}},VwlT:function(e,t,r){"use strict";var s=r("TqRt"),n=r("284h");Object.defineProperty(t,"__esModule",{value:!0}),t.loadFromExerciseId=function(e,t,r){return(s,n)=>{C(e,r).then((e=>{if(!e)throw new p.KAError("Unable to load exercise data",p.Errors.Internal);return N(e,t).then((t=>[e,t]),(e=>K(s,n,e)))})).then((([e,r])=>{s(w(e,r)),v(n(),t)})).catch((t=>{p.default.error("Couldn't load exercise info for exercise "+"".concat(e,":"),p.Errors.Internal,t)}))}},t.loadFromTaskData=function(e,t){return(r,s)=>{N(e,t).then((n=>{r(w(e,n)),v(s(),t)}),(t=>K(r,s,t,H(e)))).catch((t=>{const r=H(e);p.default.error("Couldn't load assessment item for task ".concat(r,":"),p.Errors.Internal,t)}))}},t.reloadExercise=function(){return{type:"RELOAD_EXERCISE"}},t.handleActionResults=J,t.checkAnswerAndMaybeSendProblemLog=function(e,t,r){return(s,n)=>{if(!e.empty||t){const o=n();if(!o.problemProgress||!o.taskProgress)return null;const{taskProgress:i,problemProgress:a}=o,l=JSON.stringify(e.guess),{lastAttemptOrHintTime:c,lastGuess:u}=a,d=c?Date.now()-c:0;if(t||l!==u||d>1e3){const a=V(o),l=i.attemptPromises,c=(l[l.length-1]||Promise.resolve()).then((()=>T(function(e,t,r,s,n,o){const{totalDone:i}=(0,k.getCurrentExerciseData)(s);if(!s.taskProgress)return Promise.reject("No taskProgress in state!");const{assessmentItemMetadata:a}=s.taskProgress,l=(0,k.getCurrentReservedItem)(s).itemId?null:i+1;return f.default.getGAReferrer().then((i=>{const c=L(l,e.correct,t,r,JSON.stringify(e.guess),s,i,n,JSON.stringify(e.state));return(0,E.apolloMutate)(U,{variables:c||void 0,module:o?"multithreaded":void 0}).then((e=>(A(a.id),e)))}))}(e,t,a,o,r,function(e,t){if(!e.correct)return!0;if(t.taskProgress&&!t.taskProgress.completionCriteriaSatisfied)return!0;return!1}(e,n())),3e4).then(F(s,n)).catch((e=>{"timeout"===e.message&&s(G({code:"TIMEOUT"})),p.default.error("Error sending problem attempt:",p.Errors.Internal,e)}))));s(q(c))}}s(function(e,t){return r=>{r({type:"CHECK_ANSWER",score:e,skipped:t}),r({type:"REFRESH_LIVE_UPDATES"})}}(e,t)),setTimeout((()=>{s({type:"CHECK_ANSWER_TIMEOUT"})}),1e3)}},t.showRelatedContents=function(){return{type:"SHOW_RELATED_CONTENTS"}},t.gotoNextProblem=function(e){return(t,r)=>{t({type:"MOVING_TO_NEXT_PROBLEM"});const s=r(),n=s.taskProgress&&s.taskProgress.assessmentItemMetadata.id;if(!s.taskProgress||!s.taskProgress.completionCriteriaSatisfied)return v(s,e).then((s=>{t(X(s)),n&&A(n),v(r(),e)}),(e=>K(t,r,e)));Promise.all(s.taskProgress.attemptPromises).then((()=>{t(X(null))}))}},t.showHintAndSentHintLog=z,t.showAllHintsAndSendHintLogs=function(){return(e,t)=>{const r=()=>{const{problemProgress:e}=t();return!!e&&e.hintsVisible<e.totalHints};for(;r();)e(z())}},t.addPoints=Q,t.answerableChanged=function(e){return{type:"ANSWERABLE_CHANGED",answerable:e}},t.interacted=function(){return{type:"INTERACTED"}},t.keypadLayoutChanged=function(e){return{type:"KEYPAD_LAYOUT_CHANGED",height:e}},t.gotoNextTask=function(){return{type:"MOVING_TO_NEXT_TASK"}},t.setDrawingAreaAvailability=function(e){return{type:"SET_DRAWING_AREA_AVAILABILITY",available:e}},t.hideFeedbackPopover=function(){return{type:"HIDE_FEEDBACK_POPOVER"}},t.resetIsLoaded=function(){return{type:"RESET_IS_LOADED"}},t.handleAttemptResponse=t.fetchTaskData=t.GET_OR_CREATE_PRACTICE_TASK_MUTATION=void 0;var o,i,a,l,c,u=s(r("pVnL")),d=s(r("VkAN")),m=s(r("lTCR")),p=n(r("4PhQ")),f=s(r("x+rD")),g=s(r("nSHN")),E=n(r("o1mU")),I=s(r("/eLw")),k=r("sbZd"),h=r("0bMH"),P=s(r("xoFN"));const{getOfflineHintsCount:_,trackHintsOffline:y,clearOfflineHintsCount:A}=P.default,b=(0,m.default)(o||(o=(0,d.default)(["\n    fragment userExerciseFields on UserExercise {\n        exerciseModel: exercise {\n            id\n            assessmentItemCount: numAssessmentItems\n            displayName\n            isQuiz\n            isSkillCheck\n            name\n            nodeSlug\n            progressKey\n            translatedDisplayName\n            relatedContent {\n                id\n                contentKind\n                kind\n                thumbnailUrl\n                translatedTitle\n                topicPaths {\n                    path {\n                        id\n                        kind\n                        slug\n                    }\n                }\n\n                ... on Article {\n                    kaUrl\n                    nodeSlug\n                    relativeUrl\n                    slug\n                }\n\n                ... on Video {\n                    duration\n                    imageUrl\n                    kaUrl\n                    nodeSlug\n                    relativeUrl\n                    slug\n                    translatedYoutubeId\n                }\n            }\n            relatedVideos {\n                conceptTagsInfo: conceptTags {\n                    id\n                    displayName\n                    slug\n                }\n                contentKind\n                duration\n                id\n                imageUrl\n                kaUrl\n                kind\n                nodeSlug\n                progressKey\n                relativeUrl\n                slug\n                thumbnailUrl\n                translatedDescription\n                translatedTitle\n                translatedYoutubeId\n            }\n            problemTypes {\n                items {\n                    id\n                    live\n                    sha\n                }\n                name\n                relatedVideos\n            }\n            translatedProblemTypes {\n                items {\n                    id\n                    live\n                    sha\n                }\n                name\n                relatedVideos\n            }\n        }\n        exercise: exerciseName\n        fpmMasteryLevel\n        lastAttemptNumber\n        lastCountHints\n        lastDone\n        lastMasteryUpdate\n        longestStreak\n        maximumExerciseProgressDt: maximumExerciseProgressDate\n        streak\n        totalCorrect\n        totalDone\n    }\n"]))),x=(0,m.default)(i||(i=(0,d.default)(["\n    mutation getOrCreatePracticeTask($input: GetOrCreatePracticeTaskInput!) {\n        getOrCreatePracticeTask(input: $input) {\n            result {\n                error {\n                    code\n                    debugMessage\n                }\n                userTask {\n                    cards {\n                        done\n                        cardType\n                        ... on ProblemCard {\n                            exerciseName\n                            problemType\n                        }\n                    }\n                    includeSkipButton\n                    task {\n                        contentKey\n                        exerciseLength\n                        id\n                        key\n                        pointBounty\n                        pointsEarned\n                        slug\n                        taskType\n                        timeEstimate {\n                            lowerBound\n                            upperBound\n                        }\n                        completionCriteria {\n                            name\n                        }\n                        promotionCriteria {\n                            name\n                            value\n                        }\n                        reservedItems\n                        reservedItemsCompleted\n                        taskAttemptHistory {\n                            correct\n                            timeDone\n                            seenHint\n                            itemId\n                        }\n                    }\n                    userExercises {\n                        ...userExerciseFields\n                    }\n                }\n            }\n        }\n    }\n\n    ","\n"])),b);function T(e,t){return new Promise(((r,s)=>{setTimeout((()=>s(new p.KAError("timeout",p.Errors.Internal))),t),e.then(r).catch(s)}))}function w(e,t){const r=t&&_(t.id);return(s,n)=>{if(s(function(e,t,r){return s=>{s({type:"LOADED_EXERCISE",taskData:e,assessmentItem:t,offlineHintsCount:r||0}),s({type:"REFRESH_LIVE_UPDATES"})}}(e,t,r)),null!=r&&r>0&&t){const e=n();B(e,V(e)).then((()=>A(t.id)))}}}t.GET_OR_CREATE_PRACTICE_TASK_MUTATION=x;const C=(e,t=!1)=>{const{assignment:r}=(0,I.default)(window.location.search),s=(0,u.default)({},r?{assignmentKey:r}:null,{exerciseId:e,stopCardPersist:t,canReserveItems:!0});return(0,E.apolloMutate)(x,{variables:{input:s}}).then((e=>{const{error:t,userTask:r}=e.data.getOrCreatePracticeTask.result;if(t)return M("getOrCreatePracticeTask",t),null;if(!r){return M("getOrCreatePracticeTask",{code:"GRAPHQL_ERROR",debugMessage:"No data was returned from GraphQL."}),null}return(0,h.transformUserTask)(r)}))};t.fetchTaskData=C;const S=(0,m.default)(a||(a=(0,d.default)(["\n    query getAssessmentItem($input: AssessmentItemInput!) {\n        assessmentItem(input: $input) {\n            item {\n                id\n                sha\n                problemType\n                itemData\n            }\n            error {\n                code\n                debugMessage\n            }\n        }\n    }\n"]))),D=(0,m.default)(l||(l=(0,d.default)(["\n    query getAssessmentItemGo($input: AssessmentItemInput!) {\n        assessmentItemGo(input: $input) {\n            item {\n                id\n                sha\n                problemType\n                itemData\n            }\n            error {\n                code\n                debugMessage\n            }\n        }\n    }\n"]))),R=(e=>{let t=null,r=null;return(s,n,o)=>{const i=JSON.stringify(s);return t===i&&null!=r?Promise.resolve(r):(t=i,r=e(s,n,o),r)}})(((e,t,r)=>{const s=JSON.stringify(e),n=r?D:S;return(0,E.default)(n,{variables:{input:e},fetchPolicy:"cache-first",module:t?"multithreaded":void 0}).then((e=>{if(e.errors){const t=JSON.stringify(e.errors),r="GraphQL errors fetching item: ".concat(t);return Promise.reject({code:"GRAPHQL_ERROR",debugMessage:r,inputJson:s})}if(e.data&&(e.data.assessmentItem||e.data.assessmentItemGo)){const{item:t,error:r}=e.data.assessmentItem||e.data.assessmentItemGo;return r?("NO_ACCESSIBLE_ITEMS"===r.code&&alert('You indicated in settings that you want to "hide visually-dependent content", but all of the problems in this exercise depend on visuals. If you want to complete it, please go to the settings page and de-select that option.'),Promise.reject((0,u.default)({},r,{inputJson:s}))):Promise.resolve(t)}return Promise.reject({code:"GRAPHQL_ERROR",debugMessage:"No data in GraphQL response.",inputJson:s})}))})),O=(e,t,r=!1,s=!1)=>R({exerciseId:e,itemId:t},r,s);function v(e,t){if(e.taskProgress&&e.taskProgress.taskComplete)return Promise.resolve(null);const{exerciseId:r,problemNumber:s,quizProblemNumber:n}=(0,k.getNextProblemData)(e);if(e.taskInfo&&e.taskInfo.taskReservedItems){const r=(0,k.getNextReservedItem)(e);return"string"!=typeof r.itemId||"string"!=typeof r.exerciseId?Promise.resolve(null):O(r.exerciseId,r.itemId,!0,t)}const o=e.taskProgress&&e.taskProgress.assessmentItemMetadata.sha;return R({exerciseId:r,problemNumber:s,quizProblemNumber:n,lastSeenProblemSha:o},!0,t)}function N(e,t){if(0===e.cards.length||!e.userExercises||0===e.userExercises.length)return Promise.resolve(null);const r=e.cards[0].exerciseName,s=e.userExercises.find((e=>e.exercise===r));if(!s)return Promise.resolve(null);const n=s.exerciseModel,o=s.totalDone+1;if(e.taskJson&&e.taskJson.reservedItems&&e.taskJson.reservedItems.length>0&&e.taskJson.reservedItemsCompleted){const r=(0,k.getIncompleteReservedItems)(e.taskJson.reservedItems,e.taskJson.reservedItemsCompleted);if(r.length>0){const{exerciseId:e,itemId:s}=r[0];return O(e,s,!1,t)}}const i=n.id;if(n.isQuiz){const r=(e.taskJson&&e.taskJson.taskAttemptHistory||[]).length,s=n.assessmentItemCount;return R({exerciseId:i,problemNumber:o,quizProblemNumber:r%s},!1,t)}return R({exerciseId:i,problemNumber:o},!1,t)}function H(e){return e.taskJson&&e.taskJson.key||""}const M=(e,t,r={})=>{const{code:s,debugMessage:n}=t,o=n?(0,u.default)({},r,{debugMessage:n}):r;p.default.error("".concat(e," failed: ").concat(s),p.Errors.Internal,null,{sentry:{extras:o,fingerprint:[e,s]}})},K=(e,t,r,s)=>{const{taskInfo:n}=t(),{inputJson:o}=r,i={inputJson:o,taskKey:s||n&&n.taskKey};return M("getAssessmentItem",r,i),e(G(r)),Promise.reject((0,u.default)({},r,i))};function L(e,t,r,s,n,o,i,a,l){if(!o.taskProgress||!o.problemProgress||!o.taskInfo)return null;const{assessmentItemMetadata:c}=o.taskProgress,{numberOfAttempts:u,hintsVisible:d}=o.problemProgress,{taskContentKey:m,taskKey:p}=o.taskInfo,{id:f}=(0,k.getCurrentExerciseData)(o),{topicId:g}=o.environmentState;return{input:{problemNumber:e,assessmentItemSha:c.sha,assessmentItemId:c.id,completed:t||r,exerciseId:f,topicId:g,problemType:c.problemType,countHints:d,timeTaken:s,attemptNumber:u+1,attemptContent:n,attemptState:l||"",taskContentKey:m,taskKey:p,skipped:r,clientDt:(new Date).toJSON(),localTimezoneOffsetSeconds:-1*(new Date).getTimezoneOffset()*60,context:a,gaReferrer:i}}}function V(e){if(!e.problemProgress)return null;const{lastAttemptOrHintTime:t}=e.problemProgress;if(!t)return null;const r=Date.now()-t;return Math.round(r/1e3)}const U=(0,m.default)(c||(c=(0,d.default)(["\n    mutation attemptProblem($input: AttemptProblemInput!) {\n        attemptProblem(attempt: $input) {\n            result {\n                userExercise {\n                    ...userExerciseFields\n                }\n                newTask {\n                    cards {\n                        done\n                        cardType\n                        ... on ProblemCard {\n                            exerciseName\n                            problemType\n                        }\n                    }\n                    includeSkipButton\n                    task {\n                        id\n                        key\n                        pointBounty\n                        pointsEarned\n                        taskType\n                        completionCriteria {\n                            name\n                        }\n                        ... on PracticeTask {\n                            promotionCriteria {\n                                name\n                                value\n                            }\n                            reservedItems\n                            reservedItemsCompleted\n                            taskAttemptHistory {\n                                correct\n                                timeDone\n                                seenHint\n                                itemId\n                            }\n                        }\n                    }\n                    userExercises {\n                        ...userExerciseFields\n                    }\n                }\n                actionResults {\n                    attemptCorrect\n                    notificationsAdded {\n                        avatarParts\n                        badges\n                        readable\n                        toast\n                        urgent\n                        continueUrl\n                    }\n                    pointsEarned {\n                        points\n                    }\n                }\n                attemptPromotions {\n                    fpmPromotions {\n                        progressKey\n                        level\n                    }\n                }\n                updatedRecommendations {\n                    contentId\n                    kind\n                    sourceId\n                }\n                error {\n                    code\n                    debugMessage\n                    uuid\n                }\n            }\n        }\n    }\n\n    ","\n"])),b);function B(e,t){const r=(0,k.getCurrentExerciseData)(e),{totalDone:s}=r;if(!e.taskProgress||!e.problemProgress)return Promise.reject("No taskProgress or problemProgress in state!");const n=e.problemProgress.hintsVisible,{assessmentItemMetadata:o}=e.taskProgress,i=(0,k.getCurrentReservedItem)(e).itemId?null:s+1;return f.default.getGAReferrer().then((r=>{const s=L(i,!1,!1,t,"hint",e,r);return(0,E.apolloMutate)(U,{variables:s||void 0,module:"multithreaded"}).catch((e=>{throw y(o.id,n),e}))}))}function q(e){return{type:"ADD_ATTEMPT_PROMISE",promise:e}}function G(e){return{type:"REPORT_ERROR",error:e}}function J(e,t){if(!e.actionResults)return;const{newTask:r}=e,{pointsEarned:s}=e.actionResults,n=g.default.fromGraphQL(e.actionResults),o=n.notificationsAdded;var i;s&&t(Q(s.points)),r&&t((i=(0,h.transformUserTask)(r),e=>{e({type:"UPDATE_TASK",taskData:i})})),o&&o.toast.forEach((e=>{e.class_.includes("AssignmentCompletedNotification")&&t({type:"ADD_ASSIGNMENT_COMPLETED_CONTEXT",context:e})})),g.default.respondToAction(n)}const F=(e,t)=>r=>{if(!r||r.errors){const t={code:"GRAPHQL_ERROR",debugMessage:r&&r.errors&&JSON.stringify(r.errors)||"no response"};return M("attemptProblem",t),void e(G(t))}const s=r.data.attemptProblem.result;if(s.error){const{error:r}=s,n=t(),{problemProgress:o,taskProgress:i,taskInfo:a}=n,{id:l,totalDone:c}=(0,k.getCurrentExerciseData)(n),d={exerciseId:l,totalDone:c,itemId:i&&i.assessmentItemMetadata.id,hintsVisible:o&&o.hintsVisible,taskKey:a&&a.taskKey};return M("attemptProblem",r,d),e(G(r)),Promise.reject((0,u.default)({},r,d))}if(s.userExercise&&e({type:"UPDATE_USER_EXERCISE",userExercise:s.userExercise}),J(s,e),s.attemptPromotions){const{fpmPromotions:t}=s.attemptPromotions;e({type:"ON_FPM_PROMOTIONS",promotions:(e=>e.reduce(((e,{progressKey:t,level:r})=>(0,u.default)({},e,{[t]:r})),{}))(t)})}s.updatedRecommendations&&e({type:"ON_UPDATE_RECOMMENDATIONS",recommendations:s.updatedRecommendations})};function X(e){return t=>{t({type:"GOTO_NEXT_PROBLEM",assessmentItem:e}),t({type:"REFRESH_LIVE_UPDATES"})}}function z(){return(e,t)=>{const r=t();if(r.problemProgress&&r.taskProgress&&!r.problemProgress.problemComplete){const{taskProgress:s}=r,n=V(r),o=s.attemptPromises,i=(o[o.length-1]||Promise.resolve()).then((()=>T(B(r,n),3e4))).then(F(e,t)).catch((t=>{"timeout"===t.message&&e(G({code:"TIMEOUT"})),p.default.error("Error sending hint attempt:",p.Errors.Internal,t)}));e(q(i))}e({type:"SHOW_HINT"})}}function Q(e){return{type:"ADD_POINTS",points:e}}t.handleAttemptResponse=F},sbZd:function(e,t,r){"use strict";var s=r("284h"),n=r("TqRt");Object.defineProperty(t,"__esModule",{value:!0}),t.taskProgressReducer=A,t.getCurrentExerciseData=S,t.getNextExerciseData=v,t.getNextProblemData=function(e){const{taskProgress:t,problemProgress:r}=e;if(!t)throw new l.KAError("taskProgress not defined",l.Errors.Internal);if(!r)throw new l.KAError("problemProgress not defined",l.Errors.Internal);const{exerciseName:s}=S(e),{id:n,exerciseName:o,totalDone:i,isQuiz:a,assessmentItemCount:c}=v(e);let u;u=s===o?i+(r&&r.problemComplete?1:2):i+1;let d=null;if(a){const e=(t&&t.attemptHistory||[]).length;d=e%c}return{exerciseId:n,problemNumber:u,quizProblemNumber:d}},t.getRelatedContents=function(e){const{taskProgress:t}=e;if(!t)throw new l.KAError("taskProgress not defined",l.Errors.Internal);const r=t.assessmentItemMetadata.problemType,{relatedContents:s,problemTypes:n}=S(e);if(null==n)return[];const o=n.filter((e=>e.name!==r));return s.filter((e=>o.every((t=>!(t.relatedVideos||[]).map((e=>""+e)).includes(""+e.id)))))},t.problemProgress=t.taskInfo=t.getFpmPromotionUpdates=t.getNextReservedItem=t.getCurrentReservedItem=t.getIncompleteReservedItems=t.parseReservedItem=t.create=void 0;var o=n(r("pVnL")),i=r("ANjH"),a=n(r("TdMD")),l=r("4PhQ"),c=r("0zMT"),u=s(r("Borw")),d=r("nA/X"),m=s(r("HEOz"));n(r("BQ0V"));const p=(0,c.createCompose)({reduxDevtoolsOptions:{name:"Exercises"}}),f=e=>({calculator:!!e.answerArea.calculator,chi2Table:!!e.answerArea.chi2Table,periodicTable:!!e.answerArea.periodicTable,tTable:!!e.answerArea.tTable,zTable:!!e.answerArea.zTable}),g=e=>e.hints.length,E=e=>!!e.requiresScreenOrMouse,I=e=>"practice"===e.taskType,k=e=>"topic_quiz"===e.taskType||"topic_unit_test"===e.taskType||"subject_challenge"===e.taskType||"mastery_challege"===e.taskType,h=e=>{if(!e)return null;const t=e.cards.map((e=>e.exerciseName)),{userExercises:r}=e;if(!r)throw new l.KAError("userExercises is missing on taskData",l.Errors.Internal);const s=r.reduce(((e,t)=>{const r=t.exerciseModel,s=r.relatedVideos||[],n=r.relatedContent||[];return e[t.exercise]={id:r.id,title:r.translatedDisplayName,relatedVideos:s.map((e=>({contentId:e.contentId,duration:e.duration,translatedTitle:e.translatedTitle,translatedDescription:e.translatedDescription,kaUrl:e.kaUrl,imageUrl:e.imageUrl,relativeUrl:e.relativeUrl,id:e.id,progressKey:e.progressKey,nodeSlug:e.nodeSlug,youtubeId:e.translatedYoutubeId,conceptTagsInfo:e.conceptTagsInfo,__video:e}))),relatedContents:n.filter((e=>null!==e)).map((e=>"Video"===e.contentKind?(0,o.default)({},e,{slug:e.nodeSlug.replace("v/",""),youtubeId:e.translatedYoutubeId,__video:e}):"Article"===e.contentKind?(0,o.default)({},e,{imageUrl:e.thumbnailUrl,nodeUrl:e.relativeUrl,slug:e.nodeSlug.replace("a/","")}):"Exercise"===e.contentKind?(0,o.default)({},e,{slug:e.nodeSlug.replace("e/","")}):e)),problemTypes:r.problemTypes,translatedProblemTypes:r.translatedProblemTypes,assessmentItemCount:r.assessmentItemCount,isQuiz:r.isQuiz,isSkillCheck:r.isSkillCheck,initialFpmLevel:t.fpmMasteryLevel,maximumExerciseProgressDt:t.maximumExerciseProgressDt,nodeSlug:r.nodeSlug},e}),{}),n=e.taskJson;if(!n)throw new l.KAError("taskJson is missing on taskData",l.Errors.Internal);return{exerciseDescriptors:t,infoByExercise:s,showSkipButton:e.includeSkipButton,requireAttemptBeforeHints:"topic_quiz"===n.taskType||"topic_unit_test"===n.taskType||"subject_challenge"===n.taskType||"mastery_challenge"===n.taskType,completionCriteria:u.parse(n.completionCriteria.name),promotionCriteria:I(n)?n.promotionCriteria:void 0,pointBounty:n.pointBounty,taskType:n.taskType,taskId:n.id,taskKey:n.key,taskReservedItems:n.reservedItems,taskSlug:I(n)?n.slug:void 0,exerciseNames:r.map((e=>e.exercise)),content:I(n)?n.content:void 0,taskContentKey:k(n)||I(n)?n.contentKey:void 0}},P=(e,t,r=0)=>{if(!e||!t)return null;const s=e.taskJson;if(!s)throw new l.KAError("taskJson is missing on taskData",l.Errors.Internal);const n=s.taskAttemptHistory.map((e=>({correct:e.correct,seenHint:e.seenHint}))),{cards:i}=e;if(!i)throw new l.KAError("cards is missing on taskData",l.Errors.Internal);const{userExercises:a}=e;if(!a)throw new l.KAError("userExercises is missing on taskData",l.Errors.Internal);if(i.length>0){const e=a.find((e=>e.exercise===i[0].exerciseName));if(!e)throw new l.KAError("couldn't find first userExercise",l.Errors.Internal);0===e.lastAttemptNumber&&0===e.lastCountHints&&r>0&&n.push({correct:!1,seenHint:!0})}const c=a.reduce(((e,t)=>(e[t.exercise]={currentFpmLevel:t.fpmMasteryLevel,totalDone:t.totalDone,initialHintsVisible:t.lastCountHints,initialNumberOfAttempts:t.lastAttemptNumber},e)),{}),d=a.reduce(((e,t)=>(e[t.exerciseModel.progressKey]=t.exercise,e)),{}),m=t&&JSON.parse(t.itemData),p=u.parse(s.completionCriteria.name),g=s.reservedItemsCompleted,E={exerciseDescriptorIndex:0,exerciseProgressKeyToName:d,progressByExercise:c,attemptHistory:n,completedAssessmentItems:[],completionCriteriaText:u.format(u.parse(s.completionCriteria.name),n),completionCriteriaSatisfied:!1,taskComplete:!1,movingToNextProblem:!1,reservedItemsCompleted:g,itemData:m,assessmentItemMetadata:{sha:t.sha,id:t.id,problemType:t.problemType,sidebarItems:f(m)},pointsEarned:s.pointsEarned,attemptPromises:[],assignmentContext:null,promotionCriteriaSatisfied:!1},I=u.isSatisfied(p,{taskProgress:E}),k=h(e);return(0,o.default)({},E,{completionCriteriaSatisfied:I,promotionCriteriaSatisfied:u.isPromoted(p,{taskProgress:E,taskInfo:k}),taskComplete:I})},_=(e,t,r=0)=>{if(!e||!t)return null;const{cards:s}=e;if(!s)throw new l.KAError("cards is missing on taskData",l.Errors.Internal);if(0===s.length)return{hintsVisible:0,totalHints:0,requiresScreenOrMouse:!1,attemptMessage:null,answerStatus:"unanswered",numberOfAttempts:0,hintsAreFree:!1,problemComplete:!1,interacted:!1,updatedAnswer:!1,answerable:!1,relatedContentsVisible:!1,recentlyCheckedAnswer:!1,guessLog:[],drawingAreaAvailable:!1,keypadHeight:null,readOnly:!1,showRationales:!1,feedbackPopoverVisible:!1};const{userExercises:n}=e;if(!n)throw new l.KAError("userExercises is missing on taskData",l.Errors.Internal);const o=n.find((e=>e.exercise===s[0].exerciseName));if(!o)throw new l.KAError("can't find first userExercise",l.Errors.Internal);const i=o.lastAttemptNumber,a=JSON.parse(t.itemData),c=Math.max(o.lastCountHints,r||0);return{hintsVisible:c,totalHints:g(a),requiresScreenOrMouse:E(a),relatedContentsVisible:!1,attemptMessage:null,answerStatus:c>0||i>0?"incorrect":"unanswered",numberOfAttempts:i,hintsAreFree:i>0,problemComplete:!1,interacted:!1,updatedAnswer:!1,answerable:!1,recentlyCheckedAnswer:!1,guessLog:[],drawingAreaAvailable:!0,keypadHeight:null,lastAttemptOrHintTime:Date.now(),lastGuess:null,readOnly:!1,showRationales:!1}};function y(e,t){const{taskInfo:r}=e;switch(t.type){case"RELOAD_EXERCISE":return h(null);case"LOADED_EXERCISE":case"UPDATE_TASK":return h(t.taskData);default:return r}}function A(e,t){const{taskInfo:r,taskProgress:s,problemProgress:n}=e;switch(t.type){case"RELOAD_EXERCISE":return P(null,null);case"LOADED_EXERCISE":return P(t.taskData,t.assessmentItem,t.offlineHintsCount);case"CHECK_ANSWER":{if(!r)throw new l.KAError("taskInfo not defined",l.Errors.Internal);if(!s)throw new l.KAError("taskProgress not defined",l.Errors.Internal);if(!n)throw new l.KAError("problemProgress not defined",l.Errors.Internal);const{correct:e,empty:i}=t.score,a=t.skipped;if(!a&&i)return s;const c=0===n.numberOfAttempts&&0===n.hintsVisible?[].concat(s.attemptHistory,[{correct:!a&&e,seenHint:!1}]):s.attemptHistory,{exerciseDescriptorIndex:d,progressByExercise:m}=s,p=r.exerciseDescriptors[d],f=m[p].totalDone,g=(0,o.default)({},m,{[p]:(0,o.default)({},m[p],{totalDone:f+(a||e?1:0)})}),E=(0,o.default)({},s,{attemptHistory:c,progressByExercise:g}),I={taskInfo:r,taskProgress:E,problemProgress:n};return(0,o.default)({},E,{completionCriteriaSatisfied:u.isSatisfied(r.completionCriteria,I),completionCriteriaText:u.format(r.completionCriteria,E.attemptHistory),promotionCriteriaSatisfied:u.isPromoted(r.completionCriteria,I)})}case"SHOW_HINT":if(!r)throw new l.KAError("taskInfo not defined",l.Errors.Internal);if(!s)throw new l.KAError("taskProgress not defined",l.Errors.Internal);if(!n)throw new l.KAError("problemProgress not defined",l.Errors.Internal);if(0===n.numberOfAttempts&&0===n.hintsVisible){const e=(0,o.default)({},s,{attemptHistory:[].concat(s.attemptHistory,[{correct:!1,seenHint:!0}])}),t={taskInfo:r,taskProgress:e,problemProgress:n};return(0,o.default)({},e,{completionCriteriaSatisfied:u.isSatisfied(r.completionCriteria,t),completionCriteriaText:u.format(r.completionCriteria,e.attemptHistory),promotionCriteriaSatisfied:u.isPromoted(r.completionCriteria,t)})}return s;case"MOVING_TO_NEXT_PROBLEM":return(0,o.default)({},s,{movingToNextProblem:!0});case"GOTO_NEXT_PROBLEM":{if(!r)throw new l.KAError("taskInfo not defined",l.Errors.Internal);if(!s)throw new l.KAError("taskProgress not defined",l.Errors.Internal);const{assessmentItem:e}=t,i=r.exerciseDescriptors[s.exerciseDescriptorIndex],a=[].concat(s.completedAssessmentItems,[{metadata:(0,o.default)({},s.assessmentItemMetadata),exerciseName:i}]);let c;if(s.reservedItemsCompleted){c=[].concat(s.reservedItemsCompleted);const{taskReservedItems:e}=r;if(!e)throw new l.KAError("taskReservedItem is undefined",l.Errors.Internal);const t=R(e,s.assessmentItemMetadata.id);t&&c.push(t)}if(s.completionCriteriaSatisfied||!e){const e=(0,o.default)({},s,{completedAssessmentItems:a,movingToNextProblem:!1,taskComplete:!0}),t={taskInfo:r,taskProgress:e,problemProgress:n};return(0,o.default)({},e,{promotionCriteriaSatisfied:u.isPromoted(r.completionCriteria,t)})}const d=s.progressByExercise,m=(0,o.default)({},d,{[i]:(0,o.default)({},d[i],{initialHintsVisible:0,initialNumberOfAttempts:0})}),p=JSON.parse(e.itemData);return(0,o.default)({},s,{completedAssessmentItems:a,exerciseDescriptorIndex:(s.exerciseDescriptorIndex+1)%r.exerciseDescriptors.length,progressByExercise:m,itemData:p,reservedItemsCompleted:c,assessmentItemMetadata:{sha:e.sha,id:e.id,problemType:e.problemType,sidebarItems:f(p)},movingToNextProblem:!1})}case"ADD_POINTS":if(!s)throw new l.KAError("taskProgress not defined",l.Errors.Internal);return(0,o.default)({},s,{pointsEarned:s.pointsEarned+t.points});case"ADD_ATTEMPT_PROMISE":if(!s)throw new l.KAError("taskProgress not defined",l.Errors.Internal);return(0,o.default)({},s,{attemptPromises:[].concat(s.attemptPromises,[t.promise])});case"UPDATE_USER_EXERCISE":{if(!s)throw new l.KAError("taskProgress not defined",l.Errors.Internal);const{userExercise:e}=t;return(0,o.default)({},s,{progressByExercise:(0,o.default)({},s.progressByExercise,{[e.exercise]:(0,o.default)({},s.progressByExercise[e.exercise],{currentFpmLevel:e.fpmMasteryLevel})})})}case"ON_FPM_PROMOTIONS":{if(!s)throw new l.KAError("taskProgress not defined",l.Errors.Internal);const{promotions:e}=t,r=N(s,e||{});return(0,o.default)({},s,{progressByExercise:(0,o.default)({},s.progressByExercise,r)})}case"ADD_ASSIGNMENT_COMPLETED_CONTEXT":{const{firstCompletion:e,pastDue:r,perfectScore:n,studentListName:i,improvedScore:a}=t.context,l={firstCompletion:e,pastDue:r,perfectScore:n,studentListName:i,improvedScore:a};return(0,o.default)({},s,{assignmentContext:l})}default:return s}}function b(e,t){const{taskInfo:r,taskProgress:s,problemProgress:n}=e;switch(t.type){case"RELOAD_EXERCISE":return _(null,null);case"LOADED_EXERCISE":return _(t.taskData,t.assessmentItem,t.offlineHintsCount);case"REFRESH_LIVE_UPDATES":{if(!r)throw new l.KAError("taskInfo not defined",l.Errors.Internal);if(!s)throw new l.KAError("taskProgress not defined",l.Errors.Internal);if("practice"!==r.taskType)return n;const e=r.exerciseDescriptors[s.exerciseDescriptorIndex],{currentFpmLevel:t}=s.progressByExercise[e],i=(0,d.getLiveMasteryDetails)(s.attemptHistory,r.completionCriteria,t);return(0,o.default)({},n,{liveUpdateDetails:i})}case"SHOW_RELATED_CONTENTS":return(0,o.default)({},n,{relatedContentsVisible:!0});case"CHECK_ANSWER":{if(!n)throw new l.KAError("problemProgress not defined",l.Errors.Internal);const{empty:e,correct:r,message:s,guess:i,suppressAlmostThere:a}=t.score,{skipped:c}=t,u=(0,o.default)({},n,{updatedAnswer:!1,recentlyCheckedAnswer:!c,lastAttemptOrHintTime:Date.now(),lastGuess:JSON.stringify(i)});return c||!e&&!r?(0,o.default)({},u,{attemptMessage:null,answerStatus:"incorrect",hintsAreFree:!0,numberOfAttempts:n.numberOfAttempts+1,problemComplete:!1,guessLog:n.guessLog.concat(JSON.stringify(i)),feedbackPopoverVisible:!c}):r?(0,o.default)({},u,{attemptMessage:null,answerStatus:"correct",hintsAreFree:!0,problemComplete:!0,numberOfAttempts:n.numberOfAttempts+1,guessLog:n.guessLog.concat(JSON.stringify(i)),readOnly:!0,showRationales:!0,feedbackPopoverVisible:!0}):(0,o.default)({},u,{suppressAlmostThere:a,attemptMessage:s||m._("There are still more parts of this question to answer."),feedbackPopoverVisible:!0})}case"GOTO_NEXT_PROBLEM":{if(!r)throw new l.KAError("taskInfo not defined",l.Errors.Internal);if(!s)throw new l.KAError("taskProgress not defined",l.Errors.Internal);if(s.completionCriteriaSatisfied||!t.assessmentItem)return(0,o.default)({},n,{feedbackPopoverVisible:!1});const e=JSON.parse(t.assessmentItem.itemData),i=g(e),a=r.exerciseDescriptors[s.exerciseDescriptorIndex],c=r.exerciseDescriptors[(s.exerciseDescriptorIndex+1)%r.exerciseDescriptors.length];let{initialHintsVisible:u,initialNumberOfAttempts:d}=s.progressByExercise[c];return a===c&&(u=0,d=0),(0,o.default)({},n,{hintsVisible:u,totalHints:i,attemptMessage:null,answerStatus:u>0||d>0?"incorrect":"unanswered",numberOfAttempts:d,hintsAreFree:!1,problemComplete:!1,interacted:!1,updatedAnswer:!1,answerable:!1,recentlyCheckedAnswer:!1,relatedContentsVisible:!1,guessLog:[],drawingAreaAvailable:!0,readOnly:!1,showRationales:!1,feedbackPopoverVisible:!1,lastAttemptOrHintTime:Date.now()})}case"SHOW_HINT":if(!n)throw new l.KAError("problemProgress not defined",l.Errors.Internal);return(0,o.default)({},n,{answerStatus:"correct"===n.answerStatus?n.answerStatus:"incorrect",hintsVisible:n.hintsVisible+1,lastAttemptOrHintTime:Date.now()});case"ANSWERABLE_CHANGED":return(0,o.default)({},n,{answerable:t.answerable});case"INTERACTED":return(0,o.default)({},n,{interacted:!0,updatedAnswer:!0});case"KEYPAD_LAYOUT_CHANGED":return(0,o.default)({},n,{keypadHeight:t.height});case"CHECK_ANSWER_TIMEOUT":return(0,o.default)({},n,{recentlyCheckedAnswer:!1});case"SET_DRAWING_AREA_AVAILABILITY":return(0,o.default)({},n,{drawingAreaAvailable:t.available});case"HIDE_FEEDBACK_POPOVER":return(0,o.default)({},n,{feedbackPopoverVisible:!1});default:return n}}const x=({isLoaded:e,inModal:t=!1,inPractice:r=!1,nextItem:s,nextTaskKind:n,topic:o,topicId:i,onShowRelatedContent:a})=>({isLoaded:e,inModal:t,inPractice:r,nextItem:s,nextTaskKind:n,topic:o,topicId:i,movingToNextTask:!1,error:null,onShowRelatedContent:a}),T=(e,t)=>{const{environmentState:r}=e;switch(t.type){case"RELOAD_EXERCISE":return(0,o.default)({},r,{isLoaded:!1,error:null});case"LOADED_EXERCISE":return(0,o.default)({},r,{isLoaded:!0});case"MOVING_TO_NEXT_TASK":return(0,o.default)({},r,{movingToNextTask:!0,isLoaded:!1});case"CLEAR_ERROR":return(0,o.default)({},r,{error:null});case"REPORT_ERROR":return(0,o.default)({},r,{error:t.error});case"RESET_IS_LOADED":return(0,o.default)({},r,{isLoaded:!1});default:return r}};function w(e,t){return{taskInfo:y(e,t),taskProgress:A(e,t),problemProgress:b(e,t),environmentState:T(e,t)}}const C=[a.default];function S(e){const{taskInfo:t,taskProgress:r}=e;if(!t)throw new l.KAError("taskInfo not defined",l.Errors.Internal);if(!r)throw new l.KAError("taskProgress not defined",l.Errors.Internal);const s=t.exerciseDescriptors[r.exerciseDescriptorIndex];return(0,o.default)({exerciseName:s},r.progressByExercise[s],t.infoByExercise[s])}t.create=({nextItem:e,nextTaskKind:t,topic:r,topicId:s,inModal:n,inPractice:o,onShowRelatedContent:a},l)=>(e=>{return p(i.applyMiddleware.apply(void 0,[(t=e,e=>r=>s=>{const n=r(s);return t(s,e.getState()),n})].concat(C)))(i.createStore);var t})(l)(w,{taskInfo:h(null),taskProgress:P(null,null),problemProgress:_(null,null),environmentState:x({isLoaded:!1,nextItem:e,nextTaskKind:t,topic:r,topicId:s,inModal:n,inPractice:o,onShowRelatedContent:a})});const D=e=>{const t=e.split("|");return 2!==t.length?null:{exerciseId:t[0],itemId:t[1]}};t.parseReservedItem=D;const R=(e,t)=>{for(const r of e){const e=D(r);if(e&&e.itemId===t)return r}return null},O=(e,t)=>{const r=t.reduce(((e,t)=>(e[t]=e[t]?e[t]+1:1,e)),{});return e.filter((e=>0===(r[e]||0)||(r[e]-=1,!1))).map(D).filter((e=>!!e))};t.getIncompleteReservedItems=O;t.getCurrentReservedItem=e=>{const{taskInfo:t,taskProgress:r}=e;if(!t||!r||!t.taskReservedItems)return{};const{reservedItemsCompleted:s}=r;if(!s)throw new l.KAError("reservedItemsCompleted is undefined",l.Errors.Internal);const n=O(t.taskReservedItems,s);return n.length>0?n[0]:{}};function v(e){const{taskInfo:t,taskProgress:r}=e;if(!t)throw new l.KAError("taskInfo not defined",l.Errors.Internal);if(!r)throw new l.KAError("taskProgress not defined",l.Errors.Internal);const s=t.exerciseDescriptors[(r.exerciseDescriptorIndex+1)%t.exerciseDescriptors.length];return(0,o.default)({exerciseName:s},r.progressByExercise[s],t.infoByExercise[s])}t.getNextReservedItem=e=>{const{taskInfo:t,taskProgress:r}=e;if(!t||!r||!t.taskReservedItems)return{};const{reservedItemsCompleted:s}=r;if(!s)throw new l.KAError("reservedItemsCompleted is undefined",l.Errors.Internal);const n=O(t.taskReservedItems,s);return n.length>1?n[1]:{}};const N=(e,t)=>{if(!t)return{};return Object.entries(t).reduce(((t,[r,s])=>{const n=e.exerciseProgressKeyToName[r];return n?(t[n]=(0,o.default)({},e.progressByExercise[n],{currentFpmLevel:s}),t):t}),{})};t.getFpmPromotionUpdates=N;const H=y;t.taskInfo=H;const M=b;t.problemProgress=M},xoFN:function(e,t,r){"use strict";var s=r("TqRt");Object.defineProperty(t,"__esModule",{value:!0}),t.default=void 0;var n=s(r("pVnL"));const o="khan-exercises-interface-persistent-hint-set";function i(){try{return JSON.parse(localStorage.getItem(o))||{}}catch(e){return{}}}function a(e,t){const r=i();try{localStorage.setItem(o,JSON.stringify((0,n.default)({},r,{[e]:t})))}catch(e){}}var l={getOfflineHintsCount:function(e){return i()[e]||null},trackHintsOffline:a,clearOfflineHintsCount:function(e){a(e,void 0)}};t.default=l}}]);
//# sourceMappingURL=../../sourcemaps/en/5xee.b796b28a595a2ac04782.js.map